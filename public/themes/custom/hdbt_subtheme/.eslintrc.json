{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "extends": [
    "airbnb",
    "prettier",
    "plugin:import/recommended"
  ],
  "plugins": [
    "jsdoc",
    "import"
  ],
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module"
  },
  "globals": {
    "Drupal": true,
    "drupalSettings": true,
    "drupalTranslations": true,
    "jQuery": true,
    "_": true,
    "Cookies": true,
    "Backbone": true,
    "Modernizr": true,
    "Popper": true,
    "Shepherd": true,
    "Sortable": true,
    "once": true,
    "CKEDITOR": true,
    "tabbable": true
  },
  "rules": {
    "arrow-spacing": ["warn", { "before": true, "after": true }],
    "comma-spacing": ["warn", { "before": false, "after": true }],
    "consistent-return": ["off"],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.ts",
          "**/*test.tsx",
          "**/setupTests.ts"
        ]
      }
    ],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "max-nested-callbacks": ["warn", 5],
    "no-plusplus": [
      "warn",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-param-reassign": ["off"],
    "no-prototype-builtins": ["off"],
    "no-unused-vars": ["warn"],
    "no-underscore-dangle": ["off"],
    "no-whitespace-before-property": "warn",
    "object-curly-spacing": ["error", "always"],
    "operator-linebreak": [
      "error",
      "after",
      { "overrides": { "?": "ignore", ":": "ignore" } }
    ],
    "prefer-arrow-callback":["off"],
    "quotes": ["warn", "single"],
    "semi": ["error", "always"],
    "space-in-parens": ["warn", "never"],
    "space-before-function-paren": ["error", "never"],
    "valid-jsdoc": [
      "warn",
      {
        "prefer": {
          "returns": "return",
          "property": "prop"
        },
        "requireReturn": false
      }
    ]
  },
  "settings": {
    "react": {
      "version": "17.x"
    }
  },
  "overrides": [
    {
      "files": ["*.ts?(x)"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "ecmaFeatures": {
          "jsx": true
        },
      // typescript-eslint specific options
      "warnOnUnsupportedTypeScriptVersion": true
      },
      "plugins": ["@typescript-eslint"],
      // If adding a typescript-eslint version of an existing ESLint rule,
      // make sure to disable the ESLint rule here.
      "rules": {
        // TypeScript"s `noFallthroughCasesInSwitch` option is more robust (#6906)
        "default-case": "off",
        // "tsc" already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
        "no-dupe-class-members": "off",
        // "tsc" already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
        "no-undef": "off",
        // Add TypeScript specific rules (and turn off ESLint equivalents)
        "no-array-constructor": "off",
        "no-redeclare": "off",
        "no-use-before-define": "off",
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/no-array-constructor": "warn",
        "@typescript-eslint/no-redeclare": "warn",
        "@typescript-eslint/no-use-before-define": [
          "warn",
          {
            "functions": false,
            "classes": false,
            "variables": false,
            "typedefs": false
          }
        ],
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true,
            "allowTernary": true,
            "allowTaggedTemplates": true
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "none",
            "ignoreRestSiblings": true
          }
        ],
        "no-useless-constructor": "off",
        "no-console": ["warn", { "allow": ["warn", "error"] }],
        "camelcase": "off",
        "@typescript-eslint/no-useless-constructor": "warn",
        "react/jsx-filename-extension": ["warn", { "extensions": [".js", ".jsx", ".tsx"] }],
        "react/require-default-props": "off",
        "react/jsx-props-no-spreading": "off",
        "react/no-array-index-key": "off",
        "react/function-component-definition": [1, { "namedComponents": ["arrow-function", "function-declaration"] }],
        "react/self-closing-comp": 0,
        "import/extensions": 0,
        "import/no-unresolved": 0,
        // These rules are not needed with react 17 JSX transform.
        "react/jsx-uses-react": "off",
        "react/react-in-jsx-scope": "off",
        "import/prefer-default-export": "off"
      }
    }
  ]
}
