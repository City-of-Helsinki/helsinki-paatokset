/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/paatokset_submenus.js":
/*!**************************************!*\
  !*** ./src/js/paatokset_submenus.js ***!
  \**************************************/
/***/ (function() {

eval("(function ($, Drupal, once) {\n  function handleListVisibility() {\n    const headerContainer = $('.paatokset__decision-tree-container .tabbed-list');\n    const containerWidth = headerContainer.width();\n    const menu = headerContainer.find('ul.menu');\n    const dropdown = $(headerContainer).find('.custom-select-wrapper');\n    $(dropdown).removeClass('hidden');\n    const adjustingOffset = containerWidth * 0.25;\n    const allowedWidth = containerWidth - dropdown.width() - adjustingOffset;\n    const items = $(menu).find('li').toArray();\n    let itemsWidth = 0;\n    let exceeded = false;\n    const allowedItems = [];\n    const selectedFirst = items.sort((a, b) => $(b).hasClass('selected') - $(a).hasClass('selected'));\n    for (const item of selectedFirst) {\n      itemsWidth += $(item).width();\n      exceeded = itemsWidth >= allowedWidth;\n      if (exceeded && allowedItems.length > 0) {\n        $(item).addClass('hidden');\n      } else {\n        allowedItems.push($(item).find('input').attr('value'));\n        $(item).removeClass('hidden');\n      }\n      if ($(item).hasClass('selected')) {\n        $(item).find('input').attr('aria-pressed', true);\n      } else {\n        $(item).find('input').attr('aria-pressed', false);\n      }\n    }\n    if (exceeded) {\n      $(dropdown).removeClass('hidden');\n      const dropdownItems = $('.custom-select-wrapper div.custom-option').toArray();\n      for (const item of dropdownItems) {\n        if (allowedItems.includes($(item).find('input').attr('value'))) {\n          $(item).addClass('hidden');\n        } else {\n          $(item).removeClass('hidden');\n        }\n      }\n    } else {\n      $(dropdown).addClass('hidden');\n    }\n  }\n  function handleDropdownToggle(event) {\n    if ($(event.target).parents('.custom-select-wrapper').length > 0) {\n      $(event.target).parents('.custom-select').toggleClass('open');\n    } else {\n      $('.custom-select-wrapper .custom-select').removeClass('open');\n    }\n  }\n  function showSelected() {\n    const selectedValue = $('.tabbed-list__content__inner .selected').find('input[type=\"button\"]').val();\n    $('.policymakers-documents, .policymakers-decisions').removeClass('selected-year');\n    $(`.policymakers-documents[value=\"${selectedValue}\"], .policymakers-decisions[value=\"${selectedValue}\"]`).addClass('selected-year');\n  }\n  function handleSelect(event) {\n    let value;\n    if (event.target.type === 'button') {\n      value = $(event.target).val();\n    } else {\n      const inputElement = $(event.target).find('input');\n      if (inputElement) {\n        value = $(inputElement).val();\n      }\n    }\n    if (value) {\n      // Remove all prior selected classes\n      $('.tabbed-list__content__inner ul.menu li').removeClass('selected');\n      $('.custom-select-wrapper .custom-option').removeClass('selected');\n      $('.custom-select-wrapper .custom-option input').attr('aria-pressed', false);\n\n      // Add selected class to selected item\n      $(`.tabbed-list__content__inner ul.menu input[value=\"${value}\"]`).parent('li').addClass('selected');\n      $(`.custom-select-wrapper .custom-option input[value=\"${value}\"]`).parent('.custom-option').addClass('selected');\n      $(`.custom-select-wrapper .custom-option input[value=\"${value}\"]`).attr('aria-pressed', 'true');\n\n      // Handle narrow views\n      handleListVisibility();\n    }\n    showSelected();\n  }\n  Drupal.behaviors.myBehavior = {\n    attach: function (context) {\n      once('paatokset_submenus', 'html', context).forEach(function () {\n        handleListVisibility();\n        window.addEventListener('resize', handleListVisibility);\n        $(document).click(handleDropdownToggle);\n        $(context).find('.tabbed-list__content__inner input').click(handleSelect);\n        $(context).find('#custom-options').click(handleSelect);\n      });\n    }\n  };\n})(jQuery, Drupal, once);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/paatokset_submenus.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/paatokset_submenus.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=paatokset_submenus.min.js.map