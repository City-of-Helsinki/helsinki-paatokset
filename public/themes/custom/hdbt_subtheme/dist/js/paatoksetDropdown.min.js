/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/paatoksetDropdown.js":
/*!*************************************!*\
  !*** ./src/js/paatoksetDropdown.js ***!
  \*************************************/
/***/ (function() {

eval("jQuery(function ($) {\n  const handle = $('.issue__meetings-dropdown button');\n  const optionList = $('.issue__meetings-select');\n  const options = $('.issue__meetings-select li');\n  const container = $('.issue__meetings-container');\n  const dropdown = $('.issue__meetings-dropdown');\n  const social_media = $('.social-media__items a');\n  let focusIndex = -1;\n  $(document).ready(function () {\n    $('.issue-ajax-error__container .hds-notification__label').attr('aria-hidden', 'true');\n    // Add the default style class to button\n    const defaultSelected = $('.issue__meetings-select li.selected');\n    if (defaultSelected.length) {\n      transformButton($(defaultSelected)[0]);\n    }\n    handle.on('click', function (event) {\n      optionList.toggle();\n      optionList.attr('aria-expanded', function (i, value) {\n        return value === 'true' ? 'false' : 'true';\n      });\n      dropdown.toggleClass('open');\n    });\n    handle.on('keydown', function (event) {\n      if (event.key && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n        if (optionList.css('display') === 'none') {\n          openOptions();\n        }\n      }\n    });\n\n    // Close dropdown if focus moves outside parent\n    $(container).focusout(function (event) {\n      if (!$(this).has(event.relatedTarget).length) {\n        closeOptions(false);\n      }\n    });\n    options.on('click keydown', function (event) {\n      // Prevent triggering handle's click event\n      event.preventDefault();\n      if (!event.key || event.key === 'Enter') {\n        selectOption($(this));\n      }\n    });\n    dropdown.on('keydown', function (event) {\n      if (event.key && event.key === 'Escape') {\n        closeOptions(false);\n      }\n    });\n    options.on('focus', function () {\n      focusIndex = $(options).index($(this));\n    });\n    container.on('keydown', arrowHandler);\n    $('body').on('click', '.decision-navigation-button', function (event) {\n      event.preventDefault();\n      const link = event.target.tagName === 'A' ? $(event.target).data('link') : $(event.target).parent('a').data('link');\n      console.log(link);\n      console.log($(optionList).find(`[data-link='${link}']`));\n      selectOption($(optionList).find(`[data-link='${link}']`));\n    });\n  });\n  function closeOptions(focusHandle = true) {\n    $(optionList).hide();\n    $(optionList).attr('aria-expanded', 'false');\n    $(dropdown).removeClass('open');\n    if (focusHandle) {\n      $(handle).focus();\n    }\n  }\n  function openOptions() {\n    $(optionList).show();\n    $(optionList).attr('aria-expanded', 'true');\n    $(dropdown).addClass('open');\n  }\n  function arrowHandler(event) {\n    if (!event.key || !(event.key === 'ArrowUp' || event.key === 'ArrowDown')) {\n      return;\n    }\n    if (event.key === 'ArrowUp' && focusIndex > -1) {\n      focusIndex--;\n    }\n    if (event.key === 'ArrowDown' && focusIndex < options.length - 1) {\n      focusIndex++;\n    }\n    if (focusIndex >= 0 && focusIndex < options.length) {\n      $(options)[focusIndex].focus();\n    }\n    if (focusIndex === -1) {\n      handle.focus();\n    }\n  }\n  function selectOption(selected) {\n    if ($(selected).data('link') === $(handle).data('link')) {\n      closeOptions();\n      return;\n    }\n    if ($(selected).length > 0) {\n      transformButton(selected);\n      $('.issue__meetings-dropdown .hds-button__label').html($(selected).text());\n      $('.issue__meetings-select li.selected').attr('aria-selected', 'false');\n      $('.issue__meetings-select li.selected').removeClass('selected');\n      $(selected).addClass('selected');\n      $(selected).attr('aria-selected', 'true');\n      closeOptions();\n    }\n    loadDecision($(selected).data('link'));\n  }\n  function transformButton(selected) {\n    const styleClass = $(selected).data('styleclass');\n    const link = $(selected).data('link');\n    const buttonClasses = ['hds-button', 'hds-button--secondary', styleClass];\n    $(handle).removeClass();\n    buttonClasses.forEach(function (className) {\n      $(handle).addClass(className);\n    });\n    $(handle).data('link', link);\n  }\n\n  /**\n   * Load decision content via ajax and update URL\n   */\n  function loadDecision(id) {\n    const caseId = $('#case-header').data('caseId');\n    const {\n      baseUrl,\n      pathPrefix,\n      currentPath\n    } = window.drupalSettings.path;\n    const path = `${baseUrl}${pathPrefix}ahjo_api/case/${caseId}/${id}`;\n    $.ajax({\n      url: path,\n      beforeSend: function () {\n        $('.issue__wrapper .ajax-progress-throbber').show();\n      },\n      success: function (data) {\n        if (data.content) {\n          $('.issue__ajax-container').html(data.content);\n        }\n        if (data.attachments) {\n          $('.issue__attachments__wrapper').html(data.attachments);\n        }\n        if (data.decision_navigation) {\n          $('.issue__decision-navigation__wrapper').html(data.decision_navigation);\n        }\n        if (data.all_decisions_link) {\n          $('.issue-dropdown__show-more a').attr('href', data.all_decisions_link);\n          $('.issue-dropdown__show-more a span').text(Drupal.t('Other decisions for the meeting'));\n          $('.issue-dropdown__show-more').css('display', 'block');\n        } else if (data.other_decisions_link) {\n          $('.issue-dropdown__show-more a').attr('href', data.other_decisions_link);\n          $('.issue-dropdown__show-more a span').text(Drupal.t('Other decisions for the policymaker'));\n          $('.issue-dropdown__show-more').css('display', 'block');\n        } else {\n          $('.issue-dropdown__show-more').css('display', 'none');\n        }\n        if (data.decision_pdf) {\n          $('.issue__pdf a').attr('href', data.decision_pdf);\n          $('.issue__pdf').css('display', 'block');\n        } else {\n          $('.issue__pdf').css('display', 'none');\n        }\n        if (data.language_urls) {\n          for (let langcode in data.language_urls) {\n            $('.language-link[lang=\"' + langcode + '\"]').attr('href', data.language_urls[langcode]);\n          }\n        }\n        if (data.show_warning) {\n          showWarning();\n        } else {\n          hideWarning();\n        }\n        $('.issue-ajax-error__container').hide();\n      },\n      error: function () {\n        $('.issue-ajax-error__container .hds-notification__label').attr('aria-hidden', 'false');\n        $('.issue-ajax-error__container').attr('aria-hidden', 'false').show();\n      },\n      complete: function () {\n        $('.issue__wrapper .ajax-progress-throbber').hide();\n        window.document.dispatchEvent(new Event(\"DOMContentLoaded\", {\n          bubbles: true,\n          cancelable: true\n        }));\n      }\n    });\n    let queryKey = 'paatos';\n    if (window.drupalSettings.path.currentLanguage === 'sv') {\n      queryKey = 'beslut';\n    } else if (window.drupalSettings.path.currentLanguage === 'en') {\n      queryKey = 'decision';\n    }\n    let queryparams = window.location.search;\n    if (queryparams === \"\") {\n      queryparams = '?' + queryKey + '=';\n    }\n    const old_window_href = window.location.host + window.location.pathname + queryparams;\n    window.history.pushState({}, '', `${window.location.pathname}?${queryKey}=${id}`);\n    social_media.each(function () {\n      const old_href = $(this).attr('href');\n      const new_window_href = window.location.host + window.location.pathname + window.location.search;\n      $(this).attr('href', old_href.replace(old_window_href, new_window_href));\n    });\n  }\n  function hideWarning() {\n    $('.issue__new-handlings-warning').removeClass('visible');\n  }\n  function showWarning() {\n    $('.issue__new-handlings-warning').addClass('visible');\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/paatoksetDropdown.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/paatoksetDropdown.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=paatoksetDropdown.min.js.map