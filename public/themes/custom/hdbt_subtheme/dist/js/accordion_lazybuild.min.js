/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/accordion_lazybuild.js":
/*!***************************************!*\
  !*** ./src/js/accordion_lazybuild.js ***!
  \***************************************/
/***/ (function() {

eval("/**\n * @file\n * accordion_lazybuild.js\n *\n * Allow accordions to be added to lazybuilder elements.\n */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable func-names */\n/* eslint-disable object-shorthand */\n(function ($, Drupal) {\n  Drupal.behaviors.AccordionLazyBuild = {\n    attach: function () {\n      $(document).ready(function () {\n        function closeFold(folds) {\n          const closeButton = folds.content.querySelector('.handorgel__close');\n          function moveFocus(element) {\n            element.closest('.handorgel-lazy').querySelector('.handorgel__header__button').focus();\n          }\n          closeButton.addEventListener('mousedown', function (e) {\n            folds.close();\n            e.preventDefault();\n            moveFocus(this);\n          });\n          closeButton.addEventListener('keypress', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              folds.close();\n              e.preventDefault();\n              moveFocus(this);\n            }\n          });\n        }\n\n        // Find all accordions.\n        const accordions = document.getElementsByClassName('handorgel-lazy');\n        window.handorgel_accordions_lazy = [];\n        for (const singleAccordion of accordions) {\n          /* global handorgel */\n          const accordion = new handorgel(singleAccordion, {\n            // whether multiple folds can be opened at once\n            multiSelectable: false,\n            // whether the folds are collapsible\n            collapsible: true,\n            // whether ARIA attributes are enabled\n            ariaEnabled: true,\n            // whether W3C keyboard shortcuts are enabled\n            keyboardInteraction: true,\n            // whether to loop header focus (sets focus back to first/last header when end/start reached)\n            carouselFocus: true,\n            // attribute for the header or content to open folds at initialization\n            initialOpenAttribute: 'data-open',\n            // whether to use transition at initial open\n            initialOpenTransition: true,\n            // delay used to show initial transition\n            initialOpenTransitionDelay: 200,\n            // header/content class if fold is open\n            headerOpenClass: 'handorgel__header--open',\n            contentOpenClass: 'handorgel__content--open',\n            // header/content class if fold has been opened (transition finished)\n            headerOpenedClass: 'handorgel__header--opened',\n            contentOpenedClass: 'handorgel__content--opened',\n            // header/content class if fold has been focused\n            headerFocusClass: 'handorgel__header--focus',\n            contentFocusClass: 'handorgel__content--focus',\n            // header/content class if fold is disabled\n            headerDisabledClass: 'handorgel__header--disabled',\n            contentDisabledClass: 'handorgel__content--disabled'\n          });\n\n          // Add a global variable so that we can open accordions with anchor links where needed\n          window.handorgel_accordions_lazy.push(accordion);\n\n          // Get all the folds associated to the accordion.\n          const {\n            folds\n          } = accordion;\n\n          // Go through each fold.\n          if (folds) {\n            folds.forEach(closeFold);\n          }\n        }\n      });\n    }\n  };\n})(jQuery, Drupal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/accordion_lazybuild.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/accordion_lazybuild.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=accordion_lazybuild.min.js.map