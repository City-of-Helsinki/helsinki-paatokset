{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{%
  set classes = [
  'issue',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  first_paragraph_grey ? 'has-first-gray-bg-block'
]
%}

<article{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {{ title_suffix }}

  <header id="case-header" class="issue-header__container container" data-case-id="{{ node.field_diary_number.value }}">
    <div{{ content_attributes.addClass('issue__header') }}>
      <h1{{ title_attributes.addClass('issue__title') }}>
        {{ node.field_full_title.value }}
      </h1>
    </div>
    {% if content.field_diary_number_label|render %}
      <div class="issue__diarynumber">
        <label>
          {{ 'Diary number'|trans }}
        </label>
        <span>{{ node.field_diary_number_label.value }}</span>
      </div>
    {% endif %}
    <div class="issue-header__footer">
      {% if content.field_top_category_name|render %}
        <section class="issue__category issue__left-column__container" aria-label='{{ 'Tags'|t }}' role="Region">
          <span class="hds-tag">
            <span class="hds-tag__label">{{ node.field_top_category_name.value }}</span>
          </span>
        </section>
      {% endif %}
      <div class="issue__favorite-button">
        {% set button_label = 'Save %s to favorites'|format('issue')|t %}
        {% include '@hdbt/button/button.html.twig' with {type: 'supplementary', icon_first: true, icon_first_type: 'heart', disabled: false, label: button_label } %}
      </div>
    </div>
  </header>

  <div class="issue__wrapper">
    <div class="ajax-progress-throbber"></div>

    <div class="issue__container issue__container--navigation container">
      <div class="issue__left-column__container">
        <div class="issue__decision-navigation">
          {% include '@helfi_paatokset/components/decision-navigation.html.twig' %}
        </div>
      </div>
      <div class="issue-right-column__container">
        {% if decision_pdf %}
          <div class="issue__pdf issue__pdf--desktop issue__right-column__container">
            <a href="{{ decision_pdf }}" class="hds-button hds-button--primary hdbt-icon hdbt-icon--download">
              {{ 'Download decision (pdf)'|t }}
            </a>
          </div>
        {% endif %}
      </div>
    </div>

    <div class="issue__container issue__container--content container">
      <div class="issue__left-column__container">
        <div class="issue-dropdown">
          <div class="issue-ajax-error__container">
            {% set status_headings = {'error': 'Error loading decision'|trans} %}
            {%
              set message_list = {
                'error': ['Something went wrong loading decision. Try again.'|trans]
              }
            %}
            {% include '@hdbt/misc/status-messages.html.twig' with { status_headings: status_headings, message_list: message_list, size: 'large' } %}
          </div>

          {% include '@helfi_paatokset/components/decisions-dropdown.html.twig' with { selected: selectedDecision, options: all_decisions, show_warning: next_decision, warning_label: 'More recent handlings'|trans } %}

          {% if all_decisions_link %}
          <div class="issue-dropdown__show-more">
            <a href="{{ all_decisions_link }}" class="paatokset-button-link">
              <span>{{ 'Other decisions for the meeting'|t }}</span>
              <i class="hel-icon hds-icon hds-icon--arrow-right"></i>
            </a>
          </div>
          {% endif %}
        </div>

        <div class="issue__ajax-container">
          {% include '@helfi_paatokset/components/decision-content.html.twig' with { selectedDecision } %}
        </div>
      </div>

      <div class="issue-right-column__container">
        <div class="issue__pdf issue__pdf--mobile">
          {% if decision_pdf %}
            <a href="{{ decision_pdf }}" class="hds-button hds-button--primary hdbt-icon hdbt-icon--download">
              {{ 'Download decision (pdf)'|t }}
            </a>
          {% endif %}
        </div>

        {% include '@helfi_paatokset/components/case-attachments.html.twig' %}
      </div>

    </div>
  </div>

  <div class="banner banner--default banner--design-align-left banner--has-icon">
    {% embed "@hdbt/misc/container.twig" with {container_element: 'banner'} %}
      {% block container_content %}
        {% if content.field_icon|render and 'align-left' in design %}
          <div class="banner__icon">{{ banner_content.field_icon }}</div>
        {% endif %}
        <div class="banner__content-wrapper">
          <div class="banner__content">
            <h2 class="banner__title">{{ banner_content.title }}</h2>
            <div class="banner__desc">{{ banner_content.description }}</div>
          </div>
          <a href="{{ banner_content.link['#url'] }}" class="banner__button hds-button hds-button--primary hdbt-icon hdbt-icon--link-external" target="_blank">
            <span class="hds-button__label">{{ banner_content.link['#title'] }}</span>
          </a>
        </div>
      {% endblock %}
    {% endembed %}
  </div>

</article>
