{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{%
  set classes = [
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  first_paragraph_grey ? 'has-first-gray-bg-block'
]
%}

<article{{ attributes.addClass(classes) }}>
  <section class="policymaker-summary policymaker-content">
    {% if organization_type %}
      <div class="policymaker-summary__label">
        <div role="region" aria-label="{{ 'Page tags'|t }}" class="issue-content__policymaker-label policymaker-label--small {{ organization_type_color}}">
          {{ organization_type }}
        </div>
      </div>
    {% endif %}
    {{  organization_hierarchy }}
    {% if not is_active %}
      <div class="warning-label">
        <div class="hds-tag hds-tag--alert">
          <span>{{ 'This decisionmaker is no longer active'|t }}</span>
        </div>
      </div>
    {% endif %}

    {% if render_announcement_block %}
      {{ drupal_block('paatokset_helsinki_kanava_announcements') }}
    {% endif %}

    {% if content.field_policymaker_image|render %}
      <section class="policymaker-image">
        <figure>
          {{ content.field_policymaker_image }}
          {% if node.field_policymaker_image.title %}
            <figcaption>
              {{ node.field_policymaker_image.field_image_title }}
            </figcaption>
          {% endif %}
        </figure>
      </section>
    {% endif %}

    <div>
      {% if node.field_policymaker_summary.value|render|striptags|trim is not empty %}
        {{ node.field_policymaker_summary.value | check_markup('full_html') }}
      {% elseif node.field_ahjo_summary.value|render|striptags|trim is not empty %}
        {{ node.field_ahjo_summary.value | check_markup('full_html') }}
      {% endif %}
    </div>
  </section>

  {% if live_stream %}
    <section class="policymaker-live-sream policymaker-content" id="policymaker-live-stream">
      {% if live_stream %}
        {{ live_stream }}
      {% endif %}
    </section>
  {% endif %}

  {% set sections = [
    recent_documents,
    recent_decisions,
    most_recent_meeting,
    meeting_calendar,
    members
  ] %}

  {% if true in sections %}
    <div class="table-of-contents">
      <section class="table-of-contents__container">
        <h2 class="table-of-contents__title">{{ 'On this page you will find'|trans }}</h2>
        <nav class="table-of-contents__content"><ul class="table-of-contents__list">
          {% if recent_documents %}
            <li class="table-of-contents__item"><a class="table-of-contents__link" href="#recent-documents">{{ 'Recent documents'|trans }}</a></li>
          {% endif %}
          {% if most_recent_meeting %}
            <li class="table-of-contents__item"><a class="table-of-contents__link" href="#recent-meetings">{{ 'Most recent meeting recording'|trans }}</a></li>
          {% endif %}
          {% if recent_decisions %}
            <li class="table-of-contents__item"><a class="table-of-contents__link" href="#recent-decisions">{{ 'Recent decisions'|trans }}</a></li>
          {% endif %}
          {% if meeting_calendar %}
            <li class="table-of-contents__item"><a class="table-of-contents__link" href="#meeting-calendar">{{ 'Meeting calendar'|trans }}</a></li>
          {% endif %}
          {% if is_organization %}
            <li class="table-of-contents__item"><a class="table-of-contents__link" href="#members-list">{{ 'Members list'|trans }}</a></li>
          {% endif %}
        </ul></nav>
      </section>
    </div>
  {% endif %}

  {% if not is_organization %}
    {% if recent_decisions %}
      <section class="recent-decisions policymaker-content" id="recent-decisions">
        <h2>{{ 'Recent decisions'|t }}</h2>
        <div class="section-description">
          {{ decisions_description }}
        </div>
        <div class="policymaker-decisions-container">
        {% for decision in recent_decisions %}
          {% include '@paatokset_ahjo_api/component/decision--list-item.html.twig' %}
        {% endfor %}
        <div class="view-all view-all--decisions">
          <a class="paatokset-button-link" href="{{ all_decisions_link }}">
            <span>{{ 'All decisions'|trans }}</span>
            <i class="hel-icon hel-icon--arrow-right"></i>
          </a>
        </div>
        </div>
      </section>
    {% endif %}
  {% endif %}

  {% if is_organization %}
    {% if recent_documents %}
      <section class="recent-documents policymaker-documents policymaker-content" id="recent-documents">
        <h2>{{ 'Recent documents'|trans }}</h2>
        <div class="section-description">
          {{ documents_description }}
        </div>
        <div class="policymaker-documents-container">
          {% for document in recent_documents %}
            {% include '@paatokset_ahjo_api/component/document.html.twig' %}
          {% endfor %}
        </div>
        <div class="view-all view-all--documents">
          <a class="paatokset-button-link" href="{{ all_documents_link }}">
            <span>{{ 'All documents'|t }}</span>
            <i class="hel-icon hel-icon--arrow-right"></i>
          </a>
        </div>
      </section>
    {% endif %}

    {% if most_recent_meeting|render is not empty %}
      <section class="policymaker-meetings policymaker-content" id="recent-meetings">
        <h2>{{ 'Recent meeting recording'|trans }}</h2>
        {% if next_meeting_time %}
        <div class="warning-label">
          <div class="hds-tag hds-tag--alert">
            <span>{{ 'The next meeting will be held at @next_meeting_time'|t({'@next_meeting_time': next_meeting_time}) }}</span>
          </div>
        </div>

        {% endif %}
        <div class="section-description">
          {{ recording_description }}
        </div>
       {{ most_recent_meeting }}
        {% if all_recordings_link %}
          <div class="view-all view-all--recordings">
            <a class="paatokset-button-link" href="{{ all_recordings_link }}">
              <span>{{ 'All recordings'|t }}</span>
              <i class="hel-icon hel-icon--arrow-right"></i>
            </a>
          </div>
        {% endif %}
      </section>
    {% endif %}
  {% endif %}

  {% if meeting_calendar %}
    <section class="policymaker-calendar policymaker-content" id="meeting-calendar">
      {{ drupal_block('policymaker_calendar') }}
    </section>
  {% endif %}

  {% if is_organization %}
    {% if has_members %}
      <section id="members-list" class="policymaker-content">
        {{ drupal_block('policymaker_members') }}
      </section>
    {% endif %}
  {% endif %}

  {% if no_content %}
    <div class="policymaker-content">
      <span>{{ 'This decisionmaker has no decisions'|t }}</span>
    </div>
  {% endif %}

</article>
