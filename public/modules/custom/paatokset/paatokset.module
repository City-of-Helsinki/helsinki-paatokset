<?php

/**
 * @file
 * Primary module hooks for Paatokset RSS module.
 */

declare(strict_types=1);

use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\paatokset\Lupapiste\ItemsStorage;
use Drupal\paatokset\Entity\Article;

/**
 * Implements hook_theme().
 */
function paatokset_theme() : array {
  return [
    'lupapiste_rss_list' => [
      'variables' => [
        'title' => NULL,
        'content' => NULL,
        'feed_link' => NULL,
      ],
      'template' => 'lupapiste-rss-list',
    ],
    'lupapiste_rss_item' => [
      'variables' => [
        'item' => NULL,
      ],
      'template' => 'lupapiste-rss-item',
    ],
    'all_articles' => [
      'variables' => [
        'articles_by_year' => [],
      ],
      'template' => 'block/all-articles',
    ],
  ];
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function paatokset_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['node']['article'])) {
    $bundles['node']['article']['class'] = Article::class;
  }
}

/**
 * Implements hook_cron().
 */
function paatokset_cron() : void {
  // Clear lupapiste RSS-feed cache if it's over 24 hours old (failsafe) or if
  // the RSS feed was updated since the last fetch.
  $lupapiste_storage = \Drupal::getContainer()->get(ItemsStorage::class);
  $lupapiste_storage->purgeCacheIfNeeded();
}

/**
 * Implements hook_views_data().
 */
function paatokset_views_data_alter(&$data): void {
  $data['node_field_data']['year'] = [
    'title' => new TranslatableMarkup('Filter by year'),
    'filter' => [
      'title' => new TranslatableMarkup('Filter by year'),
      'field' => 'published_at',
      'id' => 'paatokset_year',
      'time_type' => 'timestamp',
    ],
  ];
}
