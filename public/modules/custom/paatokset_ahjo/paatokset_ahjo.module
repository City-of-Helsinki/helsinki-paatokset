<?php

/**
 * @file
 * Contains paatokset_ahjo.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Render\Element;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\paatokset_ahjo\Service\IssueService;

/**
 * Implements hook_theme().
 */
function paatokset_ahjo_theme($existing, $type, $theme, $path) {
  return [
    'paatokset_issue' => [
      'render element' => 'elements',
      'template' => 'paatokset-issue',
    ],
    'paatokset_policymaker' => [
      'render element' => 'elements',
      'template' => 'paatokset-policymaker',
    ],
    'paatokset_organization' => [
      'render element' => 'elements',
      'template' => 'paatokset-organization',
    ],
    'paatokset_meeting_document' => [
      'render element' => 'elements',
      'template' => 'paatokset-meeting-document',
    ],
    'paatokset_agenda_item' => [
      'render element' => 'elements',
      'template' => 'paatokset-agenda-item',
    ],
    'tpr_unit__contact_card' => [
      'base hook' => 'entity',
      'template' => 'content/tpr-unit--contact-card',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_issue(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_issue__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_policymaker(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_policymaker__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_organization(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_organization__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_meeting_document(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_meeting_document__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_agenda_item(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_agenda_item__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-issue.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_issue(array &$variables) {
  $entityTypeIndicator = \Drupal::routeMatch()->getParameters()->keys()[0];
  $entity = \Drupal::routeMatch()->getParameter($entityTypeIndicator);
  if (is_object($entity) && $entity instanceof ContentEntityInterface) {
    $variables['entity'] = $entity;
    $issueService = \Drupal::getContainer()->get(IssueService::class);
    $data = $issueService->getData($entity->get('id')->value);
  }
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  if (isset($data)) {
    foreach ($data as $key => $value) {
      $variables[$key] = $data[$key];
    }
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-policymaker.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_policymaker(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_policymaker'])) {
    $variables['entity'] = $variables['elements']['#paatokset_policymaker'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-organization.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_organization(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_organization'])) {
    $variables['entity'] = $variables['elements']['#paatokset_organization'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-meeting-document.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_meeting_document(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_meeting_document'])) {
    $variables['entity'] = $variables['elements']['#paatokset_meeting_document'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-agenda-item.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_agenda_item(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_agenda_item'])) {
    $variables['entity'] = $variables['elements']['#paatokset_agenda_item'];
  }
}

/**
 * Implements hook_preprocess_tpr_unit__contact_card().
 */
function paatokset_ahjo_preprocess_tpr_unit__contact_card(&$variables) {
  $mapEmbed = $variables['content']['service_map_embed'];

  if (isset($mapEmbed[0]) && isset($mapEmbed[0]['link'])) {
    $variables['content']['service_map_embed_url'] = $mapEmbed[0]['link']['#attributes']['href'];
  }
}

/**
 * Placeholder for city council policymaker ID.
 */
function _paatokset_ahjo_placeholder_policymaker_id($value) {
  if ((string) $value === '5') {
    return '02900';
  }

  return $value;
}

/**
 *
 */
function paatokset_ahjo_update_8001() {
  $entity_type_id = 'paatokset_issue';
  $field_storage_definition = BaseFieldDefinition::create('string_long')
    ->setLabel(new TranslatableMarkup('top_category_name'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE)
    ->setSettings([
      'text_processing' => 0,
    ]);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('top_category_name', $entity_type_id, $entity_type_id, $field_storage_definition);
}

/**
 *
 */
function paatokset_ahjo_update_9002() {
  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('issue_id'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('issue_id', $entity_type_id, $entity_type_id, $field_storage_definition);

  $entity_type_id = 'paatokset_meeting';
  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('policymaker_uri'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('policymaker_uri', $entity_type_id, $entity_type_id, $field_storage_definition);
}

/**
 *
 */
function paatokset_ahjo_update_9003() {
  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('text_long')
    ->setLabel(new TranslatableMarkup('content_resolution'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayOptions('form', [
      'type'   => 'text_textarea',
      'weight' => -6,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_resolution', $entity_type_id, $entity_type_id, $field_storage_definition);

  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('text_long')
    ->setLabel(new TranslatableMarkup('content_draft_proposal'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayOptions('form', [
      'type'   => 'text_textarea',
      'weight' => -6,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_draft_proposal', $entity_type_id, $entity_type_id, $field_storage_definition);

  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('text_long')
    ->setLabel(new TranslatableMarkup('content_presenter'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayOptions('form', [
      'type'   => 'text_textarea',
      'weight' => -6,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_presenter', $entity_type_id, $entity_type_id, $field_storage_definition);
}

/**
 *
 */
function paatokset_ahjo_update_9004() {
  \Drupal::entityTypeManager()->clearCachedDefinitions();
  \Drupal::entityDefinitionUpdateManager()
    ->installEntityType(\Drupal::entityTypeManager()->getDefinition('paatokset_attachment'));
}

/**
 *
 */
function paatokset_ahjo_update_9005() {
  $entity_type_id = 'paatokset_agenda_item';

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('origin_last_modifed_time'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('origin_last_modifed_time', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('last_modifed_time'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('last_modifed_time', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('resource_uri'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('resource_uri', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('preparer'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('preparer', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('from_minutes'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('from_minutes', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('index'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('index', $entity_type_id, $entity_type_id, $field_storage_definition);
}

/**
 *
 */
function paatokset_ahjo_update_9006() {
  $entity_type_id = 'paatokset_meeting';

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('Display name'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ]);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('display_name', $entity_type_id, $entity_type_id, $field_storage_definition);
}

/**
 *
 */
function paatokset_ahjo_update_9007() {
  $entity_type_id = 'paatokset_attachment';

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('number'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('number', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('confidentiality_reason'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('confidentiality_reason', $entity_type_id, $entity_type_id, $field_storage_definition);
}

function paatokset_ahjo_update_9008() {
  $entity_type_id = 'paatokset_agenda_item';

  $field_storage_definition = BaseFieldDefinition::create('string')
  ->setLabel(new TranslatableMarkup('meeting_number'))
  ->setTranslatable(TRUE)
  ->setRevisionable(TRUE)
  ->setDefaultValue('')
  ->setCardinality(1)
  ->setDisplayConfigurable('view', TRUE)
  ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('meeting_number', $entity_type_id, $entity_type_id, $field_storage_definition);

  $entity_type_id = 'paatokset_meeting';
  $field_storage_definition = BaseFieldDefinition::create('string')
  ->setLabel(new TranslatableMarkup('number'))
  ->setTranslatable(TRUE)
  ->setRevisionable(TRUE)
  ->setDefaultValue('')
  ->setCardinality(1)
  ->setDisplayConfigurable('view', TRUE)
  ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('number', $entity_type_id, $entity_type_id, $field_storage_definition);
}

function paatokset_ahjo_update_9009() {
  $entity_type_id = 'paatokset_agenda_item';

  $field_storage_definition =  BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('issue_subject'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('issue_subject', $entity_type_id, $entity_type_id, $field_storage_definition);

  $field_storage_definition =  BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('top_category_name'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('top_category_name', $entity_type_id, $entity_type_id, $field_storage_definition);
}
