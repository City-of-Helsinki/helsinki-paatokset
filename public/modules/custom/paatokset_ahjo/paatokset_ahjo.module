<?php

/**
 * @file
 * Contains paatokset_ahjo.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Render\Element;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\paatokset_ahjo\Entity\Issue;
use Drupal\paatokset_ahjo\Entity\AgendaItem;

/**
 * Implements hook_theme().
 */
function paatokset_ahjo_theme() {
  return [
    'paatokset_issue' => [
      'render element' => 'elements',
      'template' => 'paatokset-issue',
    ],
    'paatokset_meeting' => [
      'render element' => 'elements',
      'template' => 'paatokset-meeting',
    ],
    'paatokset_policymaker' => [
      'render element' => 'elements',
      'template' => 'paatokset-policymaker',
    ],
    'paatokset_organization' => [
      'render element' => 'elements',
      'template' => 'paatokset-organization',
    ],
    'paatokset_meeting_document' => [
      'render element' => 'elements',
      'template' => 'paatokset-meeting-document',
    ],
    'paatokset_agenda_item' => [
      'render element' => 'elements',
      'template' => 'paatokset-agenda-item',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_issue(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_issue__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_meeting(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_meeting__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_policymaker(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_policymaker__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_organization(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_organization__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_meeting_document(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_meeting_document__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function paatokset_ahjo_theme_suggestions_paatokset_agenda_item(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'paatokset_agenda_item__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-issue.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_issue(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_issue'])) {
    $variables['entity'] = $variables['elements']['#paatokset_issue'];
    if (isset($variables['elements']['#paatokset_issue'])) {
      $variables['entity'] = $variables['elements']['#paatokset_issue'];
      $handlings = paatokset_ahjo_get_handlings($variables['entity']);
      if($handlings) {
        $current_handling = $handlings[0];
        $variables['current_handling'] = $current_handling;
        $variables['handlings'] = paatokset_ahjo_get_handlings($variables['entity']);

        if(count($handlings) > 1) {
          if($current_handling['date'] < $handlings[0]['date']) {
            $variables['has_next_handling'] = true;
          }
          if($current_handling['date'] > $handlings[count($handlings)-1]['date']) {
            $variables['has_previous_handling'] = true;
          }
        }
      }
      if(isset($variables['current_handling'])) {
        $variables['current_agenda_item'] = AgendaItem::load($variables['current_handling']['link']);
      }
    }
  }
}

function paatokset_ahjo_get_handlings(Issue $entity) {
  $issue_id = $entity->get('id')->value;
  $database = \Drupal::database();
  $query = $database->select('paatokset_meeting_field_data', 'pmfd')
    ->fields('pmfd', ['meeting_date', 'policymaker'])
    ->fields('paifd', ['id'])
    ->fields('nfot', ['field_organization_type_value']);
  $query->join('paatokset_agenda_item_field_data', 'paifd', 'pmfd.id = paifd.meeting_id');
  $query->join('node__field_resource_uri', 'nfru', 'nfru.field_resource_uri_value = pmfd.policymaker_uri');
  $query->join('node__field_organization_type', 'nfot', 'nfot.entity_id = nfru.entity_id');
  $query->condition('paifd.issue_id', $issue_id);
  $query->orderBy('pmfd.meeting_date', 'DESC');
  $results = $query->execute()->fetchAll();

  $transformed_result = [];
  foreach($results as $result) {
    $date = date('d.m.Y', strtotime($result->meeting_date));
    $transformed_result[] = [
      'title' => "$result->policymaker/$date",
      'class' => str_replace('_', '-', $result->field_organization_type_value),
      'link' =>  $result->id,
      'id' => $result->id,
      'policymaker_name' => $result->policymaker,
      'date' => $result->meeting_date
    ];
  }

  return $transformed_result;
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-meeting.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_meeting(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_meeting'])) {
    $variables['entity'] = $variables['elements']['#paatokset_meeting'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-policymaker.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_policymaker(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_policymaker'])) {
    $variables['entity'] = $variables['elements']['#paatokset_policymaker'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-organization.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_organization(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_organization'])) {
    $variables['entity'] = $variables['elements']['#paatokset_organization'];
  }
}

/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-meeting-document.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_meeting_document(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_meeting_document'])) {
    $variables['entity'] = $variables['elements']['#paatokset_meeting_document'];
  }
}
 
/**
 * Prepares variables for paatokset_ahjo templates.
 *
 * Default template: paatokset-agenda-item.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 */
function template_preprocess_paatokset_agenda_item(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  if (isset($variables['elements']['#paatokset_agenda_item'])) {
    $variables['entity'] = $variables['elements']['#paatokset_agenda_item'];
  }
}

function paatokset_ahjo_update_8001() {
  $entity_type_id = 'paatokset_issue';
  $field_storage_definition = BaseFieldDefinition::create('string_long')
    ->setLabel(new TranslatableMarkup('top_category_name'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE)
    ->setSettings([
      'text_processing' => 0,
    ]);

    \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('top_category_name', $entity_type_id, $entity_type_id, $field_storage_definition);
}

function paatokset_ahjo_update_9002() {
  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('issue_id'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('issue_id', $entity_type_id, $entity_type_id, $field_storage_definition);

  $entity_type_id = 'paatokset_meeting';
  $field_storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(new TranslatableMarkup('policymaker_uri'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setDefaultValue('')
    ->setCardinality(1)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('policymaker_uri', $entity_type_id, $entity_type_id, $field_storage_definition);
}

function paatokset_ahjo_update_9003() {
  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('text_long')
      ->setLabel(new TranslatableMarkup('content_resolution'))
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE)
      ->setDefaultValue('')
      ->setCardinality(1)
      ->setDisplayOptions('form', array(
        'type'   => 'text_textarea',
        'weight' => -6
      ))
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_resolution', $entity_type_id, $entity_type_id, $field_storage_definition);
  
  $entity_type_id = 'paatokset_agenda_item';
  $field_storage_definition = BaseFieldDefinition::create('text_long')
      ->setLabel(new TranslatableMarkup('content_draft_proposal'))
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE)
      ->setDefaultValue('')
      ->setCardinality(1)
      ->setDisplayOptions('form', array(
        'type'   => 'text_textarea',
        'weight' => -6
      ))
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayConfigurable('form', TRUE);

    \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_draft_proposal', $entity_type_id, $entity_type_id, $field_storage_definition);
    
    $entity_type_id = 'paatokset_agenda_item';
    $field_storage_definition = BaseFieldDefinition::create('text_long')
      ->setLabel(new TranslatableMarkup('content_presenter'))
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE)
      ->setDefaultValue('')
      ->setCardinality(1)
      ->setDisplayOptions('form', array(
        'type'   => 'text_textarea',
        'weight' => -6
      ))
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayConfigurable('form', TRUE);

    \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('content_presenter', $entity_type_id, $entity_type_id, $field_storage_definition);
}
