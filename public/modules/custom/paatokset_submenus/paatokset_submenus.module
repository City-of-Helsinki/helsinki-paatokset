<?php

/**
 * @file
 * Contains paatokset_submenus.
 */

declare(strict_types=1);

use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function paatokset_submenus_theme($existing, $type, $theme, $path) {
  return [
    'block__policymaker_side_navigation' => [
      'base hook' => 'block',
      'template' => '/block--policymaker-side-navigation',
      'path' => $path . '/templates',
    ],
    'block__policymaker_side_navigation__mobile' => [
      'base hook' => 'block',
      'template' => '/block--policymaker-side-navigation--mobile',
      'path' => $path . '/templates',
    ],
    'block__agendas_submenu' => [
      'base hook' => 'block',
      'render element' => 'elements',
      'template' => '/block--agendas-submenu',
      'path' => $path . '/templates',
    ],
  ];
}

/**
 * Implements hook_preprocess_block().
 */
function paatokset_submenus_preprocess_block(&$variables) {
  // Bail if plugin_id is not set.
  if (!isset($variables['plugin_id'])) {
    return;
  }

  $plugins = [
    'agendas_submenu',
    'agendas_submenu_documents',
    'paatokset_minutes_of_discussion',
  ];

  if (in_array($variables['plugin_id'], $plugins)) {
    $variables['years'] = $variables['content']['#years'];
    $variables['list'] = $variables['content']['#list'];

    if ($variables['plugin_id'] === 'agendas_submenu') {
      $variables['type'] = 'decisions';
    }

    if (in_array($variables['plugin_id'], [
      'agendas_submenu_documents',
      'paatokset_minutes_of_discussion',
    ])) {
      $variables['type'] = 'documents';
    }
  }

  if ($variables['plugin_id'] === 'policymaker_side_nav') {
    if (isset($variables['elements']['content']['#items'])) {
      $variables['items'] = $variables['elements']['content']['#items'];
      $variables['menu_attributes'] = new Attribute(['class' => 'menu']);
      $variables['attributes'] = new Attribute(['class' => ['sidebar-navigation']]);

      $currentLanguage = \Drupal::languageManager()->getCurrentLanguage()->getId();
      if ($currentLanguage === 'fi') {
        $variables['menu_link_parent'] = [
          'title' => t('Decisionmakers'),
          'url' => Url::fromRoute('policymakers.fi'),
        ];
      }
      elseif ($currentLanguage === 'sv') {
        $variables['menu_link_parent'] = [
          'title' => t('Decisionmakers'),
          'url' => Url::fromRoute('policymakers.sv'),
        ];
      }
      elseif ($currentLanguage === 'en') {
        $variables['menu_link_parent'] = [
          'title' => t('Decisionmakers'),
          'url' => Url::fromRoute('policymakers.en'),
        ];
      }

      $variables['#attached']['library'][] = 'hdbt/sidebar-menu-toggle';
    }
  }

  if ($variables['plugin_id'] === 'policymaker_side_nav_mobile') {
    $variables['#attached']['library'][] = 'hdbt/sidebar-menu-toggle';

    $variables['current_option'] = json_decode($variables['elements']['content']['#current_option']);

    // Create fake menu items for mobile navigation.
    foreach (json_decode($variables['elements']['content']['#options']) as $option) {
      $variables['items'][] = [
        'title' => $option->label,
        'url' => Url::fromUserInput($option->value),
        'attributes' => new Attribute(),
        'in_active_trail' => paatokset_submenus_is_active_trail($variables['current_option'], $option),
        'is_currentPage' => paatokset_submenus_is_active_trail($variables['current_option'], $option),
      ];
    }
  }
}

/**
 * Helper function to check if the current option is in active trail.
 */
function paatokset_submenus_is_active_trail($currentOption, $option) {
  return $currentOption->value === $option->value;
}

/**
 * Implements hook_theme_suggestion_block_alter().
 */
function paatokset_submenus_theme_suggestions_block_alter(&$suggestions, $variables) {
  if (isset($variables['elements']['#plugin_id'])) {
    if (in_array($variables['elements']['#plugin_id'], [
      'agendas_submenu_documents',
      'paatokset_minutes_of_discussion',
    ])) {
      $suggestions[] = 'block__agendas_submenu';
    }
    if ($variables['elements']['#plugin_id'] === 'policymaker_side_nav') {
      $suggestions[] = 'block__policymaker_side_navigation';
    }
    if ($variables['elements']['#plugin_id'] === 'policymaker_side_nav_mobile') {
      $suggestions[] = 'block__policymaker_side_navigation__mobile';
    }
  }
}
